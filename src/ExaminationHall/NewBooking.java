/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package ExaminationHall;
import java.awt.Image;
import java.awt.Toolkit;
import java.sql.*;
import java.sql.JDBCType;
import java.sql.Connection;
import java.sql.DatabaseMetaData;
import java.sql.PseudoColumnUsage;
import java.sql.ResultSetMetaData;
import java.text.SimpleDateFormat;
import java.util.Date;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;
import java.sql.ResultSet;
import java.util.Vector;
import javax.swing.table.DefaultTableModel;
import java.sql.RowId;
import java.text.DateFormat;
import java.text.ParseException;
import java.time.LocalDate;
import java.util.Optional;
import javax.swing.ImageIcon;
import javax.swing.JFrame;
import javax.swing.JTextField;
import java.time.LocalDateTime;
import java.time.ZoneId;
import java.time.ZonedDateTime;
import java.time.format.DateTimeFormatter;



/**
 *
 * @author Irfan
 */
public class NewBooking extends javax.swing.JFrame {

    /**
     * Creates new form NewBooking
     * @throws java.sql.SQLException
     */
    public NewBooking() throws SQLException {
        
        initComponents();
        Connect();
        BookDetails();
        SetIcon();
        this.setTitle("UTHM Examination Hall Booking System");
        txtfloor.setEnabled(false);
        
        EditButton.setEnabled(false);
        DeleteButton.setEnabled(false);
        
        StartDate();
       
        
    }
    
    Connection con;
    PreparedStatement pst;
    ResultSet rs;
    
    
    public void Connect() throws SQLException
    {
        
        try {
            Class.forName("com.mysql.cj.jdbc.Driver");
            con = DriverManager.getConnection("jdbc:mysql://localhost/examhall","root","");
        } catch (ClassNotFoundException | SQLException ex) {
            Logger.getLogger(NewBooking.class.getName()).log(Level.SEVERE, null, ex);
        }
        
    }
    
        public void BookDetails() throws SQLException
        {
            try {
                    pst = con.prepareStatement("select * from examhallbookingdetails"); 
                    rs = pst.executeQuery(); 
                    
                    ResultSetMetaData rsd = rs.getMetaData();
                    int c; 
                    c = rsd.getColumnCount();
                    DefaultTableModel d = (DefaultTableModel)jTable1.getModel();
                    d.setRowCount(0);
                    
                    while(rs.next())
                    {
                        Vector v = new Vector();
                        for(int i=0;i<=c;i++)
                        {
                            v.add(rs.getString("txtapplicant"));
                            v.add(rs.getString("txtexamname"));
                            v.add(rs.getString("txtstaffname"));
                            v.add(rs.getString("txtfloor"));
                            v.add(rs.getString("txtdate"));
                            v.add(rs.getString("txtTime"));
                            v.add(rs.getString("txtstatus"));
                            v.add(rs.getString("txtreason"));
                        }
                        
                    d.addRow(v);
                    }
                    
                    }
                    catch (SQLException ex){
                        Logger.getLogger(NewBooking.class.getName()).log(Level.SEVERE,null,ex);
                        
                    }
                }
            

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        SelectStatus = new javax.swing.ButtonGroup();
        jPanel2 = new javax.swing.JPanel();
        jPanel3 = new javax.swing.JPanel();
        jScrollPane2 = new javax.swing.JScrollPane();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();
        jPanel1 = new javax.swing.JPanel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        txtTime = new javax.swing.JTextField();
        txtfloor = new javax.swing.JTextField();
        datechooser = new com.toedter.calendar.JDateChooser();
        jLabel8 = new javax.swing.JLabel();
        jLabel9 = new javax.swing.JLabel();
        txtexamname = new javax.swing.JTextField();
        txtstaffname = new javax.swing.JTextField();
        SelectLevel = new javax.swing.JComboBox<>();
        jLabel7 = new javax.swing.JLabel();
        jLabel12 = new javax.swing.JLabel();
        jLabel13 = new javax.swing.JLabel();
        jLabel14 = new javax.swing.JLabel();
        jLabel15 = new javax.swing.JLabel();
        SelectSubject = new javax.swing.JComboBox<>();
        txtapplicant = new javax.swing.JTextField();
        SelectExamType = new javax.swing.JComboBox<>();
        approved = new javax.swing.JRadioButton();
        notApproved = new javax.swing.JRadioButton();
        jScrollPane3 = new javax.swing.JScrollPane();
        txtreason = new javax.swing.JTextPane();
        TimeChooser = new javax.swing.JComboBox<>();
        txtstatus = new javax.swing.JTextField();
        jLabel6 = new javax.swing.JLabel();
        RefreshButton = new javax.swing.JButton();
        buttonBack = new javax.swing.JButton();
        DeleteButton = new javax.swing.JButton();
        EditButton = new javax.swing.JButton();
        AddButton = new javax.swing.JButton();
        jPanel4 = new javax.swing.JPanel();
        jLabel10 = new javax.swing.JLabel();
        jLabel11 = new javax.swing.JLabel();
        jLabel1 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setResizable(false);
        setSize(new java.awt.Dimension(1026, 676));

        jPanel2.setBackground(new java.awt.Color(204, 204, 204));
        jPanel2.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED));

        jPanel3.setBackground(new java.awt.Color(0, 0, 153));
        jPanel3.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED));

        jTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null}
            },
            new String [] {
                "Applicant's name", "Exam name", "Lecturer name", "Floor ", "Date", "Time", "Status", "Reason"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jTable1.getTableHeader().setReorderingAllowed(false);
        jTable1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jTable1MouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(jTable1);
        if (jTable1.getColumnModel().getColumnCount() > 0) {
            jTable1.getColumnModel().getColumn(0).setResizable(false);
            jTable1.getColumnModel().getColumn(0).setPreferredWidth(35);
            jTable1.getColumnModel().getColumn(1).setResizable(false);
            jTable1.getColumnModel().getColumn(1).setPreferredWidth(140);
            jTable1.getColumnModel().getColumn(2).setResizable(false);
            jTable1.getColumnModel().getColumn(2).setPreferredWidth(30);
            jTable1.getColumnModel().getColumn(3).setResizable(false);
            jTable1.getColumnModel().getColumn(3).setPreferredWidth(0);
            jTable1.getColumnModel().getColumn(4).setResizable(false);
            jTable1.getColumnModel().getColumn(4).setPreferredWidth(20);
            jTable1.getColumnModel().getColumn(5).setResizable(false);
            jTable1.getColumnModel().getColumn(5).setPreferredWidth(50);
            jTable1.getColumnModel().getColumn(6).setResizable(false);
            jTable1.getColumnModel().getColumn(6).setPreferredWidth(20);
            jTable1.getColumnModel().getColumn(7).setResizable(false);
            jTable1.getColumnModel().getColumn(7).setPreferredWidth(150);
        }

        jScrollPane2.setViewportView(jScrollPane1);

        jPanel1.setBackground(new java.awt.Color(255, 255, 255));
        jPanel1.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED));

        jLabel2.setText("Examination hall:");

        jLabel3.setText("Floor");

        jLabel4.setText("Date");

        jLabel5.setText("Time");

        txtTime.setDisabledTextColor(new java.awt.Color(0, 0, 0));
        txtTime.setEnabled(false);
        txtTime.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtTimeActionPerformed(evt);
            }
        });

        txtfloor.setDisabledTextColor(new java.awt.Color(0, 0, 0));
        txtfloor.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtfloorActionPerformed(evt);
            }
        });

        datechooser.setToolTipText("Click the calendar icon to change date");
        datechooser.setOpaque(false);
        datechooser.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                datechooserFocusGained(evt);
            }
            public void focusLost(java.awt.event.FocusEvent evt) {
                datechooserFocusLost(evt);
            }
        });
        datechooser.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                datechooserMouseClicked(evt);
            }
        });
        datechooser.addInputMethodListener(new java.awt.event.InputMethodListener() {
            public void caretPositionChanged(java.awt.event.InputMethodEvent evt) {
            }
            public void inputMethodTextChanged(java.awt.event.InputMethodEvent evt) {
                datechooserInputMethodTextChanged(evt);
            }
        });

        jLabel8.setText("Exam name");

        jLabel9.setText("Lecturer's name");

        txtexamname.setDisabledTextColor(new java.awt.Color(0, 0, 0));
        txtexamname.setEnabled(false);
        txtexamname.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtexamnameActionPerformed(evt);
            }
        });

        txtstaffname.setToolTipText("Lecturer for the subject selected");
        txtstaffname.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtstaffnameActionPerformed(evt);
            }
        });

        SelectLevel.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Select level", "Level 1", "Level 2" }));
        SelectLevel.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                SelectLevelActionPerformed(evt);
            }
        });

        jLabel7.setText("F2");

        jLabel12.setText("Applicant's name");

        jLabel13.setText("Status");

        jLabel14.setText("Subject name");

        jLabel15.setText("Exam type");

        SelectSubject.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Select subject", "Discrete Structure", "Statistic", "Computer Architecture", "Operating System", "Human Computer Interaction", "Object Oriented Programming" }));
        SelectSubject.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                SelectSubjectActionPerformed(evt);
            }
        });

        txtapplicant.setToolTipText("Lecturer/Student name");

        SelectExamType.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Select type of exam", "Final Exam", "Mid-term Exam" }));
        SelectExamType.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                SelectExamTypeActionPerformed(evt);
            }
        });

        SelectStatus.add(approved);
        approved.setText("Approved");
        approved.setActionCommand("Approved\n");
        approved.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                approvedActionPerformed(evt);
            }
        });

        SelectStatus.add(notApproved);
        notApproved.setText("Not approved");
        notApproved.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                notApprovedActionPerformed(evt);
            }
        });

        txtreason.setToolTipText("State a reason if \"not approved\" selected");
        jScrollPane3.setViewportView(txtreason);

        TimeChooser.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Select duration of time", "09:00 AM - 12:00 PM", "02:30 PM - 05:30 PM" }));
        TimeChooser.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                TimeChooserActionPerformed(evt);
            }
        });

        txtstatus.setDisabledTextColor(new java.awt.Color(0, 0, 0));
        txtstatus.setEnabled(false);
        txtstatus.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtstatusActionPerformed(evt);
            }
        });

        jLabel6.setText("Reason ");

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGap(24, 24, 24)
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                    .addComponent(jLabel15, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(jLabel14, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(jLabel12, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                                .addContainerGap()
                                .addComponent(jLabel2)))
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGap(18, 18, 18)
                                .addComponent(SelectSubject, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                                .addGap(17, 17, 17)
                                .addComponent(SelectExamType, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGap(17, 17, 17)
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(jPanel1Layout.createSequentialGroup()
                                        .addComponent(jLabel7)
                                        .addGap(0, 0, Short.MAX_VALUE))
                                    .addComponent(txtapplicant)))))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(23, 23, 23)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                        .addComponent(jLabel8, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 90, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addComponent(jLabel9, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 90, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addComponent(jLabel3, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 90, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addComponent(jLabel6, javax.swing.GroupLayout.PREFERRED_SIZE, 91, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGap(18, 18, 18)
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                                        .addComponent(approved, javax.swing.GroupLayout.PREFERRED_SIZE, 98, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(notApproved, javax.swing.GroupLayout.PREFERRED_SIZE, 98, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addComponent(txtstaffname, javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                                        .addComponent(txtfloor, javax.swing.GroupLayout.DEFAULT_SIZE, 88, Short.MAX_VALUE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(SelectLevel, javax.swing.GroupLayout.PREFERRED_SIZE, 109, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addComponent(jScrollPane3, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 202, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(txtexamname, javax.swing.GroupLayout.Alignment.TRAILING)))
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel13, javax.swing.GroupLayout.PREFERRED_SIZE, 43, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                        .addComponent(jLabel5, javax.swing.GroupLayout.PREFERRED_SIZE, 90, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, 90, javax.swing.GroupLayout.PREFERRED_SIZE)))
                                .addGap(18, 18, 18)
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(txtstatus, javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addComponent(txtTime, javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addComponent(TimeChooser, javax.swing.GroupLayout.Alignment.TRAILING, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(datechooser, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))))
                .addGap(22, 22, 22))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(20, 20, 20)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(jLabel7))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel12)
                    .addComponent(txtapplicant, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel14)
                    .addComponent(SelectSubject, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel15)
                    .addComponent(SelectExamType, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel8)
                    .addComponent(txtexamname, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel9)
                    .addComponent(txtstaffname, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel3)
                    .addComponent(txtfloor, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(SelectLevel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(26, 26, 26)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(datechooser, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel4))
                .addGap(26, 26, 26)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel5)
                    .addComponent(TimeChooser, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(txtTime, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(16, 16, 16)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel13)
                    .addComponent(txtstatus, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(approved)
                    .addComponent(notApproved))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel6)
                    .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 49, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        RefreshButton.setText("Refresh");
        RefreshButton.setToolTipText("Click \"Refresh\" to add new record");
        RefreshButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                RefreshButtonActionPerformed(evt);
            }
        });

        buttonBack.setText("Confirm Booking");
        buttonBack.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                buttonBackActionPerformed(evt);
            }
        });

        DeleteButton.setText("Delete");
        DeleteButton.setToolTipText("Click \"Delete\" to delete the record selected");
        DeleteButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                DeleteButtonActionPerformed(evt);
            }
        });

        EditButton.setText("Edit");
        EditButton.setToolTipText("Click \"Edit\" to edit record selected");
        EditButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                EditButtonActionPerformed(evt);
            }
        });

        AddButton.setText("Add");
        AddButton.setToolTipText("Click \"Add\" to add new record");
        AddButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                AddButtonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel3Layout.createSequentialGroup()
                .addGap(30, 30, 30)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addComponent(AddButton)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(EditButton)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(DeleteButton))
                    .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addComponent(RefreshButton)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(buttonBack))
                    .addComponent(jScrollPane2, javax.swing.GroupLayout.DEFAULT_SIZE, 1057, Short.MAX_VALUE))
                .addGap(24, 24, 24))
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addGap(17, 17, 17)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jScrollPane2))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(AddButton)
                        .addComponent(EditButton)
                        .addComponent(DeleteButton))
                    .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(RefreshButton)
                        .addComponent(buttonBack)))
                .addContainerGap(55, Short.MAX_VALUE))
        );

        jPanel4.setBackground(new java.awt.Color(255, 255, 255));
        jPanel4.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));

        jLabel10.setBackground(new java.awt.Color(0, 0, 204));
        jLabel10.setFont(new java.awt.Font("STXinwei", 1, 48)); // NOI18N
        jLabel10.setForeground(new java.awt.Color(0, 0, 153));
        jLabel10.setText("ADMIN ");
        jLabel10.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);

        jLabel11.setFont(new java.awt.Font("Verdana", 1, 12)); // NOI18N
        jLabel11.setText("MANAGE BOOKING");

        jLabel1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel1.setMinimumSize(new java.awt.Dimension(1026, 676));

        javax.swing.GroupLayout jPanel4Layout = new javax.swing.GroupLayout(jPanel4);
        jPanel4.setLayout(jPanel4Layout);
        jPanel4Layout.setHorizontalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addGap(28, 28, 28)
                .addComponent(jLabel10)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel11)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 322, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );
        jPanel4Layout.setVerticalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel4Layout.createSequentialGroup()
                        .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 89, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addContainerGap())
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel4Layout.createSequentialGroup()
                        .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel10)
                            .addComponent(jLabel11))
                        .addGap(24, 24, 24))))
        );

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jPanel4, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jPanel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel4, javax.swing.GroupLayout.PREFERRED_SIZE, 102, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void AddButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_AddButtonActionPerformed
        
            // TODO add your handling code here:
            String applicantname = txtapplicant.getText();
            String examname = txtexamname.getText();
            String staffname = txtstaffname.getText();
            String floortype = txtfloor.getText();
            
            String time = txtTime.getText();
            String status = txtstatus.getText();
            String reason = txtreason.getText();
            
            SimpleDateFormat date_format = new SimpleDateFormat("d MMM y");
            String date = date_format.format(datechooser.getDate());
            
            
        try {    
           
            if (applicantname.equals("") || examname.equals("") || staffname.equals("") || floortype.equals("") || date.equals("") || time.equals("") || status.equals(""))
            {
                JOptionPane.showMessageDialog(this,"Blank not Allowed");
            }
            
            else if (notApproved.isSelected() && reason.equals(""))
            {
                JOptionPane.showMessageDialog(this,"Please state a reason");
            }
            
            else
            {
            Statement stmt = con.createStatement();
            String selectQuery = "select * from examhallbookingdetails where txtexamname = '"+examname+"'";
            ResultSet rs3 = stmt.executeQuery(selectQuery);
            
            if (rs3.next())
                {
                
                JOptionPane.showMessageDialog(this,"Exam name already exist");

                }
            
            else
            {
                Statement stmt2 = con.createStatement();
                String selectQuery2 = "select * from examhallbookingdetails where txtdate = '"+date+"' and txtTime = '"+time+"' and txtfloor = '"+floortype+"'";
                ResultSet rs4 = stmt2.executeQuery(selectQuery2);
                
                if (rs4.next())
                {
                    JOptionPane.showMessageDialog(this,"The slot already booked");
                }
                
                else
                {
                
                pst = con.prepareStatement("insert into examhallbookingdetails(txtapplicant,txtexamname,txtstaffname,txtfloor,txtdate,txtTime,txtstatus,txtreason)values(?,?,?,?,?,?,?,?)");
                pst.setString(1, applicantname);
                pst.setString(2, examname);
                pst.setString(3,staffname);
                pst.setString(4,floortype);
                pst.setString(5, date);
                pst.setString(6,time);
                pst.setString(7, status);
                pst.setString(8,reason);
                
                pst.executeUpdate();
                JOptionPane.showMessageDialog(this,"Record Added");
                
                
                
                }
                
            }
            
            
            }
            
            
            
            txtapplicant.setText("");
            txtexamname.setText("");
            txtstaffname.setText("");
            txtfloor.setText("");
            
            txtTime.setText("");
            txtstatus.setText("");
            txtreason.setText("");
            SelectSubject.setSelectedItem("Select subject");
            SelectExamType.setSelectedItem("Select type of exam");
            SelectLevel.setSelectedItem("Select level");
            TimeChooser.setSelectedItem("Select duration of time");
            SelectStatus.clearSelection();
            
            txtapplicant.requestFocus();
            BookDetails();
            
            SelectSubject.setEnabled(true);
            SelectExamType.setEnabled(true);
            
            AddButton.setEnabled(true);
            StartDate();
        } catch (SQLException ex) {
            
            Logger.getLogger(NewBooking.class.getName()).log(Level.SEVERE, null, ex);
            
        }
        
        
        
        


    }//GEN-LAST:event_AddButtonActionPerformed

    private void buttonBackActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_buttonBackActionPerformed
        // TODO add your handling code here:
            JFrame frame = new JFrame("Confirm Booking");
        if(JOptionPane.showConfirmDialog(frame,"Are you sure want to confirm booking?","Confirm Booking",JOptionPane.YES_NO_OPTION)==JOptionPane.YES_NO_OPTION)
        {
            Homepage m = new Homepage();
            this.hide();
            m.setVisible(true);
        }
        
        
    }//GEN-LAST:event_buttonBackActionPerformed

    private void jTable1MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jTable1MouseClicked
        try {
            // TODO add your handling code here:
            
            
            DefaultTableModel d = (DefaultTableModel)jTable1.getModel();
            int selectIndex = jTable1.getSelectedRow();
            
            txtapplicant.setText(d.getValueAt(selectIndex, 0).toString());
            txtexamname.setText(d.getValueAt(selectIndex, 1).toString());
            txtstaffname.setText(d.getValueAt(selectIndex, 2).toString());
            txtfloor.setText(d.getValueAt(selectIndex, 3).toString());
            
            Date date = new SimpleDateFormat("d MMM y").parse((String)d.getValueAt(selectIndex, 4));
            datechooser.setDate(date);
            
            
            txtTime.setText(d.getValueAt(selectIndex, 5).toString());
            txtstatus.setText(d.getValueAt(selectIndex, 6).toString());
            txtreason.setText(d.getValueAt(selectIndex, 7).toString());
            
            
            if(txtstatus.getText().equals("Approved"))
            {
                approved.setSelected(true);
                txtreason.setEnabled(false);
            }
            
            else if (txtstatus.getText().equals("Not approved"))
            {
                notApproved.setSelected(true);
                txtreason.setEnabled(true);
            }
            
            SelectSubject.setEnabled(false);
            SelectExamType.setEnabled(false);
            TimeChooser.setSelectedItem(txtTime.getText());
            SelectLevel.setSelectedItem(txtfloor.getText());
            
            AddButton.setEnabled(false);
            EditButton.setEnabled(true);
            DeleteButton.setEnabled(true);
            txtexamname.setEnabled(false);
        } catch (ParseException ex) {
            Logger.getLogger(NewBooking.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_jTable1MouseClicked

    private void DeleteButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_DeleteButtonActionPerformed
        // TODO add your handling code here:
        String examname = txtexamname.getText();
        
            
            
        try {    
            pst = con.prepareStatement("delete from examhallbookingdetails where txtexamname = ?");
            pst.setString(1,examname);
            
            
            int k = pst.executeUpdate();
            
            if(k==1)
            {
                JOptionPane.showMessageDialog(this,"Record Deleted");
            }
            
            else
            {
                JOptionPane.showMessageDialog(this, "Record Failed");
            }
            txtapplicant.setText("");
            txtexamname.setText("");
            txtstaffname.setText("");
            txtfloor.setText("");
            
            txtTime.setText("");
            txtstatus.setText("");
            txtreason.setText("");
            
            SelectSubject.setSelectedItem("Select subject");
            SelectExamType.setSelectedItem("Select type of exam");
            SelectLevel.setSelectedItem("Select level");
            TimeChooser.setSelectedItem("Select duration of time");
            SelectStatus.clearSelection();
            
            txtapplicant.requestFocus();
            BookDetails();
            SelectSubject.setEnabled(true);
            SelectExamType.setEnabled(true);
            AddButton.setEnabled(true);
            EditButton.setEnabled(false);
            DeleteButton.setEnabled(false);
            StartDate();
        } catch (SQLException ex) {
            Logger.getLogger(NewBooking.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_DeleteButtonActionPerformed

    private void EditButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_EditButtonActionPerformed
        // TODO add your handling code here:
        String applicantname = txtapplicant.getText();
        String examname = txtexamname.getText();
        String staffname = txtstaffname.getText();
        String floortype = txtfloor.getText();
        
        String time = txtTime.getText();
        String status = txtstatus.getText();
        String reason = txtreason.getText();
            
        SimpleDateFormat date_format = new SimpleDateFormat("d MMM y");
        String date = date_format.format(datechooser.getDate());  
        
        try {    
            
            if (applicantname.equals("") || examname.equals("") || staffname.equals("") || floortype.equals("") || date.equals("") || time.equals("") || status.equals(""))
            {
                JOptionPane.showMessageDialog(this,"Blank not Allowed");
            }
            
            else if (notApproved.isSelected() && reason.equals(""))
            {
                JOptionPane.showMessageDialog(this,"Please state a reason");
            }
            
            else 
            {
                Statement stmt = con.createStatement();
                String selectQuery2 = "select * from examhallbookingdetails where txtdate = '"+date+"' and txtTime = '"+time+"' and txtfloor = '"+floortype+"' and txtexamname != '"+examname+"'";
                ResultSet rs2 = stmt.executeQuery(selectQuery2);
                
                
                if (rs2.next()==true)
                {
                    
                    JOptionPane.showMessageDialog(this,"The slot already booked");
                    
                }
                
                
                else 
                {
                    
                
                pst = con.prepareStatement("update examhallbookingdetails set txtapplicant = ?, txtexamname = ?, txtstaffname = ?, txtfloor = ?, txtdate = ?, txtTime = ?, txtstatus = ?, txtreason = ? where txtexamname = ?");
                pst.setString(1, applicantname);
                pst.setString(2, examname);
                pst.setString(3, staffname);
                pst.setString(4,floortype);
                pst.setString(5,date);
                pst.setString(6, time);
                pst.setString(7, status);
                pst.setString(8, reason);
                pst.setString(9, examname);
                pst.executeUpdate();
                JOptionPane.showMessageDialog(this,"Record Updated");
                
                }
            } 
            txtapplicant.setText("");
            txtexamname.setText("");
            txtstaffname.setText("");
            txtfloor.setText("");
            
            txtTime.setText("");
            txtstatus.setText("");
            txtreason.setText("");
            
            SelectSubject.setSelectedItem("Select subject");
            SelectExamType.setSelectedItem("Select type of exam");
            SelectLevel.setSelectedItem("Select level");
            TimeChooser.setSelectedItem("Select duration of time");
            SelectStatus.clearSelection();
            
            txtapplicant.requestFocus();
            BookDetails();
            SelectSubject.setEnabled(true);
            SelectExamType.setEnabled(true);
            AddButton.setEnabled(true);
            EditButton.setEnabled(false);
            DeleteButton.setEnabled(false);
            StartDate();
        } catch (SQLException ex) {
            Logger.getLogger(NewBooking.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_EditButtonActionPerformed

    private void RefreshButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_RefreshButtonActionPerformed
        try {
            // TODO add your handling code here:
            StartDate();
            
            BookDetails();
            AddButton.setEnabled(true);
            EditButton.setEnabled(false);
            DeleteButton.setEnabled(false);
            
            txtapplicant.setText("");
            txtexamname.setText("");
            txtstaffname.setText("");
            txtfloor.setText("");
            
            txtTime.setText("");
            txtstatus.setText("");
            txtreason.setText("");
            
            SelectSubject.setEnabled(true);
            SelectExamType.setEnabled(true);
            SelectSubject.setSelectedItem("Select subject");
            SelectExamType.setSelectedItem("Select type of exam");
            TimeChooser.setSelectedItem("Select duration of time");
            SelectLevel.setSelectedItem("Select level");
            SelectStatus.clearSelection();
            txtreason.setEnabled(true);
            
            txtexamname.requestFocus();
        } catch (SQLException ex) {
            Logger.getLogger(NewBooking.class.getName()).log(Level.SEVERE, null, ex);
        
        }
        
    }//GEN-LAST:event_RefreshButtonActionPerformed

    private void txtTimeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtTimeActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtTimeActionPerformed

    private void txtfloorActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtfloorActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtfloorActionPerformed

    private void txtexamnameActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtexamnameActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtexamnameActionPerformed

    private void txtstaffnameActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtstaffnameActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtstaffnameActionPerformed

    private void SelectLevelActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_SelectLevelActionPerformed
        // TODO add your handling code here:
        
        String selectedValue = SelectLevel.getSelectedItem().toString();
        if ("Select level".equals(selectedValue))
        {
            txtfloor.setText("");
        }
        else
        {
            txtfloor.setText(selectedValue);
        }
        
    }//GEN-LAST:event_SelectLevelActionPerformed

    private void datechooserMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_datechooserMouseClicked
        // TODO add your handling code here:
        
       
    }//GEN-LAST:event_datechooserMouseClicked

    private void datechooserInputMethodTextChanged(java.awt.event.InputMethodEvent evt) {//GEN-FIRST:event_datechooserInputMethodTextChanged
        // TODO add your handling code here:
        
    }//GEN-LAST:event_datechooserInputMethodTextChanged

    private void datechooserFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_datechooserFocusLost
       
        
    }//GEN-LAST:event_datechooserFocusLost

    private void SelectSubjectActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_SelectSubjectActionPerformed
        // TODO add your handling code here:
        String selectedValue = SelectSubject.getSelectedItem().toString();
        if ("Select subject".equals(selectedValue))
        {
            txtexamname.setText("");
            
        }
        else
        {
            
            String selectedValue2 = SelectExamType.getSelectedItem().toString();
            if ("Select type of exam".equals(selectedValue2))
            { 
            txtexamname.setText("");
            
            }
            else
            {
            
            txtexamname.setText(selectedValue +"-"+ selectedValue2);
            }
        }
    }//GEN-LAST:event_SelectSubjectActionPerformed

    private void SelectExamTypeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_SelectExamTypeActionPerformed
        // TODO add your handling code here:
        String selectedValue = SelectExamType.getSelectedItem().toString();
        if ("Select type of exam".equals(selectedValue))
        {
            txtexamname.setText("");
            
        }
        else
        {
            String selectedValue2 = SelectSubject.getSelectedItem().toString();
            if ("Select subject".equals(selectedValue2))
            {
            txtexamname.setText("");
            
            }
            else
            {
            
            txtexamname.setText(selectedValue2 +"-"+ selectedValue);
            }
        }
    }//GEN-LAST:event_SelectExamTypeActionPerformed

    private void TimeChooserActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_TimeChooserActionPerformed
        // TODO add your handling code here:
        String selectedValue = TimeChooser.getSelectedItem().toString();
        if ("Select duration of time".equals(selectedValue))
        {
            txtTime.setText("");
        }
        else
        {
            txtTime.setText(selectedValue);
        }
    }//GEN-LAST:event_TimeChooserActionPerformed

    private void approvedActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_approvedActionPerformed
        // TODO add your handling code here:
        if (approved.isSelected())
        {
            txtstatus.setText("Approved");
            txtreason.setEnabled(false);
            txtreason.setText("");
        }
        
        else if(!approved.isSelected() && !notApproved.isSelected())
        {
            txtstatus.setText("");
            txtreason.setText("");
        }
        
        
    }//GEN-LAST:event_approvedActionPerformed

    private void notApprovedActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_notApprovedActionPerformed
        // TODO add your handling code here:
        if (notApproved.isSelected())
        {
            txtstatus.setText("Not approved");
            txtreason.setEnabled(true);
        }
        
        else if(!approved.isSelected() && !notApproved.isSelected())
        {
            txtstatus.setText("");
            txtreason.setText("");
        }
        
    }//GEN-LAST:event_notApprovedActionPerformed

    private void txtstatusActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtstatusActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtstatusActionPerformed

    private void datechooserFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_datechooserFocusGained
        // TODO add your handling code here:
        
            if(datechooser.getDate()!=null)
        {
            // TODO add your handling code here:
            
            datechooser.setDate(null);
            
        }
        
    }//GEN-LAST:event_datechooserFocusGained

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(NewBooking.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(NewBooking.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(NewBooking.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(NewBooking.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(() -> {
            try {
                new NewBooking().setVisible(true);
            } catch (SQLException ex) {
                Logger.getLogger(NewBooking.class.getName()).log(Level.SEVERE, null, ex);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton AddButton;
    private javax.swing.JButton DeleteButton;
    private javax.swing.JButton EditButton;
    private javax.swing.JButton RefreshButton;
    private javax.swing.JComboBox<String> SelectExamType;
    private javax.swing.JComboBox<String> SelectLevel;
    private javax.swing.ButtonGroup SelectStatus;
    private javax.swing.JComboBox<String> SelectSubject;
    private javax.swing.JComboBox<String> TimeChooser;
    private javax.swing.JRadioButton approved;
    private javax.swing.JButton buttonBack;
    private com.toedter.calendar.JDateChooser datechooser;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel14;
    private javax.swing.JLabel jLabel15;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JTable jTable1;
    private javax.swing.JRadioButton notApproved;
    private javax.swing.JTextField txtTime;
    private javax.swing.JTextField txtapplicant;
    private javax.swing.JTextField txtexamname;
    private javax.swing.JTextField txtfloor;
    private javax.swing.JTextPane txtreason;
    private javax.swing.JTextField txtstaffname;
    private javax.swing.JTextField txtstatus;
    // End of variables declaration//GEN-END:variables

    private void SetIcon() {
        setIconImage(Toolkit.getDefaultToolkit().getImage(getClass().getResource("LOGOUTHM.png")));
        ImageIcon myimage = new ImageIcon(Toolkit.getDefaultToolkit().getImage(getClass().getResource("UTHMlogologo.png")));
        Image img1 = myimage.getImage();
        Image img2 = img1.getScaledInstance(jLabel1.getWidth(),jLabel1.getHeight(),Image.SCALE_SMOOTH);
        ImageIcon i = new ImageIcon(img2);
        jLabel1.setIcon(i);
    }

    private void StartDate() {
        try {
            DateTimeFormatter dtf = DateTimeFormatter.ofPattern("yyyy-MM-dd");
            LocalDateTime now = LocalDateTime.now();
            Date date = new SimpleDateFormat("yyyy-MM-dd").parse(dtf.format(now));
            datechooser.setDate(date);
        } catch (ParseException ex) {
            Logger.getLogger(NewBooking.class.getName()).log(Level.SEVERE, null, ex);
        }
    }

    
}
